% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pmLKH.R
\name{pmlkh}
\alias{pmlkh}
\alias{pmlkhfix}
\alias{pmpenlkh}
\title{Permutation likelihood approach}
\usage{
pmlkh(dat, group, niter = 50, eps = 0.01, nlag = 20, nburnin = 50000,
      nsamp = 1e+05, nintv = 50, maxcyc = 2)

pmlkhfix(dat, group, fixstruct, niter = 50, eps = 0.01, nlag = 20, nburnin = 50000,
         nsamp = 1e+05, nintv = 50, maxcyc = 2)

pmpenlkh(dat, group, lambda, nburnin = 50000, nsamp = 10000,
         nintv = 200, niter = 50, eps = 0.01, maxcyc = 2)
}
\arguments{
\item{dat}{the whole data matrix.}

\item{group}{a vector denoting the sizes of the variables in each group the data matrix divided.}

\item{niter}{the maximum number of iterations.}

\item{eps}{convergence criterion.}

\item{nlag}{the number of steps averaged in obtaining the stablized results.}

\item{nburnin}{samples to be discarded in the metropolis algorithm for sampling permutations.}

\item{nsamp}{size of the Monte Carlo sample taken for mean and variance matrix approximation.}

\item{nintv}{sampling interval in the Monte Carlo Markov chain (Metropolis).}

\item{maxcyc}{the maximum cycle length in the candidate permutation update.}

\item{lambda}{a vector of penalty parameters. A network is selected for each lambda value.}

\item{fixstruct}{a matrix indicating which coefficients are set to 0.}
}
\value{
The \code{pmlkh} function returns

1. the estimated odds ratio parameters.

2. the variance-covariance matrix of the odds ratio parameter estimator.

The \code{pmlkhfix} function returns

1. the estimated odds ratio parameters.

2. the variance-covariance matrix of the odds ratio parameter estimator.

3. logarithm of the maximum permutation likelihood.

The \code{pmpenlkh} function returns

1. The group vector specified.

2. A set of networks selected by the penalized pseudo-likelihood with within group labeled by NA.

3. Annotation of the entries of the network structure matrix.

4. A set of networks selected by the penalized pseudo-likelihood with within group labeled by 0.
}
\description{
The \code{pmlkh} and \code{pmlkhfix} functions maximize the Monte Carlo approximated permutation likelihood
to obtain the parameter estimates in the semiparametric odds ratio model.  The \code{pmpenlkh} function
uses the penalized approximated permutation likelihood approach to select network based on the semiparametric
odds ratio model. Currently, only the bilinear log-odds ratio function is allowed.
}
\details{
The \code{pmlkhfix} function is more general than the \code{pmlkh} function since the former not only allows for
the fixed zero coefficients, it also computes the logarithm of the maximum permutation likelihood values.

For all of the three functions, one has to specify the whole data matrix including the outcome and covariates,
and the sizes of the variables in each group the data matrix divides.

For the \code{pmlkhfix} function, one has to specify a matrix for a fixed structure, that indicating which
coefficients are set to zero. For the \code{pmpenlkh} function, a \code{lambda} parameter that specifies the
penalies on the permutation likelihood, is required.

While the \code{pmlkh} and \code{pmlkhfix} are mainly used for estimating the odds ratio parameters and the
associated variance-covariance matrices, the \code{pmpenlkh} function performs the selection of network
connections.
}
\examples{

\dontrun{
# pmklh example 1
n <- 100
p <- 4
group <- c(2, 2)
dat <- array(0, c(n, p))
dat[, (1 + group[1]) : p] <- matrix((runif(n * group[2]) - 0.5) * 2, ncol = group[2])
dat[, 1] <- rpois(n, exp(dat[,3] - dat[,4])) #Poisson error
dat[, 2] <- rpois(n, exp(dat[,3] + dat[,4]))

pmlkh(dat, group)

# pmlkh example 2
n <-  200
p <- 9
group <- c(2, 3, 4)
dat <- matrix(rnorm(n * p), ncol = p)
for(k in 1:p - 2){
  dat[, k] <- dat[, k + 2] + rnorm(n)
}

pmlkh(dat, group, 60, 30, 40000, 5000, 300)

# pmlkhfix example 1
n <- 100
p <- 4
vargroup <- c(2, 2)
datmat <- array(0, c(n, p))
datmat[, (1+group[1]) : p] <- matrix((runif(n * group[2]) - 0.5) * 2, ncol = group[2])
datmat[,1] <- rpois(n,exp(dat[,3] - dat[,4])) #Poisson error
datmat[,2] <- rpois(n,exp(dat[,3] + dat[,4]))
structure <- matrix(rbin(p*p),ncol=p)

pmlkhfix(dat = datmat, group = vargroup, fixstruct = structure)

# pmlkhfix example 2
n <- 200
p <- 9
vargroup <- c(2, 3, 4)
datmat <- matrix(rnorm(n * p), ncol = p)
structure <- matrix(bin(p*p),ncol=p)
for(k in 1:p - 2){
  datmat[,k] <- datmat[,k+2] + rnorm(n)
}

pmlkhfix(dat = datmat, group = vargroup, fixstruct = structure,
         niter = 60, nlag = 30, nburn = 40000, nsamp = 5000, nintv = 300)

# pmpenlkh example
n <- 200; p <- 10
datmat <- matrix(rnorm(n * p), ncol = p)
vargroup <- c(2, 3, 1, 4)
penaltyparam <- c(10, 50, 500)

pmpenlkh(dat = datmat, group = vargroup, lambda = penaltyparam)

}

}
\references{
...

...
}
